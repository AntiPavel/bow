// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXAggregateTarget section */
		"Bow::BowPackageTests::ProductTarget" /* BowPackageTests */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = OBJ_453 /* Build configuration list for PBXAggregateTarget "BowPackageTests" */;
			buildPhases = (
			);
			dependencies = (
				OBJ_456 /* PBXTargetDependency */,
			);
			name = BowPackageTests;
			productName = BowPackageTests;
		};
/* End PBXAggregateTarget section */

/* Begin PBXBuildFile section */
		OBJ_228 /* Package.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_6 /* Package.swift */; };
		OBJ_234 /* Package.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_198 /* Package.swift */; };
		OBJ_240 /* Package.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_217 /* Package.swift */; };
		OBJ_246 /* Function0Test.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_90 /* Function0Test.swift */; };
		OBJ_247 /* Function1Test.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_91 /* Function1Test.swift */; };
		OBJ_248 /* KleisliOperatorTest.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_92 /* KleisliOperatorTest.swift */; };
		OBJ_249 /* KleisliTest.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_93 /* KleisliTest.swift */; };
		OBJ_250 /* BooleanFunctionsTest.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_94 /* BooleanFunctionsTest.swift */; };
		OBJ_251 /* CurryTest.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_95 /* CurryTest.swift */; };
		OBJ_252 /* ConstTest.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_97 /* ConstTest.swift */; };
		OBJ_253 /* CoproductTest.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_98 /* CoproductTest.swift */; };
		OBJ_254 /* EitherTest.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_99 /* EitherTest.swift */; };
		OBJ_255 /* EvalTest.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_100 /* EvalTest.swift */; };
		OBJ_256 /* IdTest.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_101 /* IdTest.swift */; };
		OBJ_257 /* IorTest.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_102 /* IorTest.swift */; };
		OBJ_258 /* ListKWTest.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_103 /* ListKWTest.swift */; };
		OBJ_259 /* MaybeTest.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_104 /* MaybeTest.swift */; };
		OBJ_260 /* NonEmptyListTest.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_105 /* NonEmptyListTest.swift */; };
		OBJ_261 /* TryTest.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_106 /* TryTest.swift */; };
		OBJ_262 /* TupleTest.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_107 /* TupleTest.swift */; };
		OBJ_263 /* ValidatedTest.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_108 /* ValidatedTest.swift */; };
		OBJ_264 /* AsyncContextLaws.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_110 /* AsyncContextLaws.swift */; };
		OBJ_265 /* IOTest.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_111 /* IOTest.swift */; };
		OBJ_266 /* FreeTest.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_113 /* FreeTest.swift */; };
		OBJ_267 /* NumberInstancesTest.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_115 /* NumberInstancesTest.swift */; };
		OBJ_268 /* StringInstancesTest.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_116 /* StringInstancesTest.swift */; };
		OBJ_269 /* PartialApplicationTest.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_117 /* PartialApplicationTest.swift */; };
		OBJ_270 /* PredefTest.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_118 /* PredefTest.swift */; };
		OBJ_271 /* EitherTTest.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_120 /* EitherTTest.swift */; };
		OBJ_272 /* MaybeTTest.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_121 /* MaybeTTest.swift */; };
		OBJ_273 /* StateTTest.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_122 /* StateTTest.swift */; };
		OBJ_274 /* WriterTTest.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_123 /* WriterTTest.swift */; };
		OBJ_275 /* ApplicativeErrorLaws.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_125 /* ApplicativeErrorLaws.swift */; };
		OBJ_276 /* ApplicativeLaws.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_126 /* ApplicativeLaws.swift */; };
		OBJ_277 /* ComonadLaws.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_127 /* ComonadLaws.swift */; };
		OBJ_278 /* EqLaws.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_128 /* EqLaws.swift */; };
		OBJ_279 /* FunctorFilterLaws.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_129 /* FunctorFilterLaws.swift */; };
		OBJ_280 /* FunctorLaws.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_130 /* FunctorLaws.swift */; };
		OBJ_281 /* MonadErrorLaws.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_131 /* MonadErrorLaws.swift */; };
		OBJ_282 /* MonadFilterLaws.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_132 /* MonadFilterLaws.swift */; };
		OBJ_283 /* MonadLaws.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_133 /* MonadLaws.swift */; };
		OBJ_284 /* MonadStateLaws.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_134 /* MonadStateLaws.swift */; };
		OBJ_285 /* MonadWriterLaws.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_135 /* MonadWriterLaws.swift */; };
		OBJ_286 /* MonoidKLaws.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_136 /* MonoidKLaws.swift */; };
		OBJ_287 /* MonoidLaws.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_137 /* MonoidLaws.swift */; };
		OBJ_288 /* OrderLaws.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_138 /* OrderLaws.swift */; };
		OBJ_289 /* SemigroupKLaws.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_139 /* SemigroupKLaws.swift */; };
		OBJ_290 /* SemigroupLaws.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_140 /* SemigroupLaws.swift */; };
		OBJ_292 /* Nimble.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "Nimble::Nimble::Product" /* Nimble.framework */; };
		OBJ_293 /* SwiftCheck.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "SwiftCheck::SwiftCheck::Product" /* SwiftCheck.framework */; };
		OBJ_294 /* Bow.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "Bow::Bow::Product" /* Bow.framework */; };
		OBJ_305 /* AdapterProtocols.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_145 /* AdapterProtocols.swift */; };
		OBJ_306 /* AssertionDispatcher.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_146 /* AssertionDispatcher.swift */; };
		OBJ_307 /* AssertionRecorder.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_147 /* AssertionRecorder.swift */; };
		OBJ_308 /* NMBExpectation.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_148 /* NMBExpectation.swift */; };
		OBJ_309 /* NMBObjCMatcher.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_149 /* NMBObjCMatcher.swift */; };
		OBJ_310 /* NimbleEnvironment.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_150 /* NimbleEnvironment.swift */; };
		OBJ_311 /* NimbleXCTestHandler.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_151 /* NimbleXCTestHandler.swift */; };
		OBJ_312 /* ExceptionCapture.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_153 /* ExceptionCapture.swift */; };
		OBJ_313 /* DSL+Wait.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_154 /* DSL+Wait.swift */; };
		OBJ_314 /* DSL.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_155 /* DSL.swift */; };
		OBJ_315 /* Expectation.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_156 /* Expectation.swift */; };
		OBJ_316 /* ExpectationMessage.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_157 /* ExpectationMessage.swift */; };
		OBJ_317 /* Expression.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_158 /* Expression.swift */; };
		OBJ_318 /* FailureMessage.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_159 /* FailureMessage.swift */; };
		OBJ_319 /* AllPass.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_161 /* AllPass.swift */; };
		OBJ_320 /* AsyncMatcherWrapper.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_162 /* AsyncMatcherWrapper.swift */; };
		OBJ_321 /* BeAKindOf.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_163 /* BeAKindOf.swift */; };
		OBJ_322 /* BeAnInstanceOf.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_164 /* BeAnInstanceOf.swift */; };
		OBJ_323 /* BeCloseTo.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_165 /* BeCloseTo.swift */; };
		OBJ_324 /* BeEmpty.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_166 /* BeEmpty.swift */; };
		OBJ_325 /* BeGreaterThan.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_167 /* BeGreaterThan.swift */; };
		OBJ_326 /* BeGreaterThanOrEqualTo.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_168 /* BeGreaterThanOrEqualTo.swift */; };
		OBJ_327 /* BeIdenticalTo.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_169 /* BeIdenticalTo.swift */; };
		OBJ_328 /* BeLessThan.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_170 /* BeLessThan.swift */; };
		OBJ_329 /* BeLessThanOrEqual.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_171 /* BeLessThanOrEqual.swift */; };
		OBJ_330 /* BeLogical.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_172 /* BeLogical.swift */; };
		OBJ_331 /* BeNil.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_173 /* BeNil.swift */; };
		OBJ_332 /* BeVoid.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_174 /* BeVoid.swift */; };
		OBJ_333 /* BeginWith.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_175 /* BeginWith.swift */; };
		OBJ_334 /* Contain.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_176 /* Contain.swift */; };
		OBJ_335 /* ContainElementSatisfying.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_177 /* ContainElementSatisfying.swift */; };
		OBJ_336 /* EndWith.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_178 /* EndWith.swift */; };
		OBJ_337 /* Equal.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_179 /* Equal.swift */; };
		OBJ_338 /* HaveCount.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_180 /* HaveCount.swift */; };
		OBJ_339 /* Match.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_181 /* Match.swift */; };
		OBJ_340 /* MatchError.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_182 /* MatchError.swift */; };
		OBJ_341 /* MatcherFunc.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_183 /* MatcherFunc.swift */; };
		OBJ_342 /* MatcherProtocols.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_184 /* MatcherProtocols.swift */; };
		OBJ_343 /* PostNotification.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_185 /* PostNotification.swift */; };
		OBJ_344 /* Predicate.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_186 /* Predicate.swift */; };
		OBJ_345 /* RaisesException.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_187 /* RaisesException.swift */; };
		OBJ_346 /* SatisfyAnyOf.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_188 /* SatisfyAnyOf.swift */; };
		OBJ_347 /* ThrowAssertion.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_189 /* ThrowAssertion.swift */; };
		OBJ_348 /* ThrowError.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_190 /* ThrowError.swift */; };
		OBJ_349 /* ToSucceed.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_191 /* ToSucceed.swift */; };
		OBJ_350 /* Async.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_193 /* Async.swift */; };
		OBJ_351 /* Errors.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_194 /* Errors.swift */; };
		OBJ_352 /* Functional.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_195 /* Functional.swift */; };
		OBJ_353 /* SourceLocation.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_196 /* SourceLocation.swift */; };
		OBJ_354 /* Stringers.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_197 /* Stringers.swift */; };
		OBJ_360 /* Arbitrary.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_201 /* Arbitrary.swift */; };
		OBJ_361 /* Cartesian.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_202 /* Cartesian.swift */; };
		OBJ_362 /* Check.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_203 /* Check.swift */; };
		OBJ_363 /* CoArbitrary.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_204 /* CoArbitrary.swift */; };
		OBJ_364 /* Compose.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_205 /* Compose.swift */; };
		OBJ_365 /* Gen.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_206 /* Gen.swift */; };
		OBJ_366 /* Lattice.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_207 /* Lattice.swift */; };
		OBJ_367 /* Modifiers.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_208 /* Modifiers.swift */; };
		OBJ_368 /* Property.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_209 /* Property.swift */; };
		OBJ_369 /* Random.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_210 /* Random.swift */; };
		OBJ_370 /* Rose.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_211 /* Rose.swift */; };
		OBJ_371 /* State.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_212 /* State.swift */; };
		OBJ_372 /* Test.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_213 /* Test.swift */; };
		OBJ_373 /* Testable.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_214 /* Testable.swift */; };
		OBJ_374 /* Witness.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_215 /* Witness.swift */; };
		OBJ_375 /* WitnessedArbitrary.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_216 /* WitnessedArbitrary.swift */; };
		OBJ_381 /* Cokleisli.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_10 /* Cokleisli.swift */; };
		OBJ_382 /* Function0.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_11 /* Function0.swift */; };
		OBJ_383 /* Function1.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_12 /* Function1.swift */; };
		OBJ_384 /* FunctionK.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_13 /* FunctionK.swift */; };
		OBJ_385 /* Kleisli.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_14 /* Kleisli.swift */; };
		OBJ_386 /* KleisliOperator.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_15 /* KleisliOperator.swift */; };
		OBJ_387 /* BooleanFunctions.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_16 /* BooleanFunctions.swift */; };
		OBJ_388 /* Curry.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_17 /* Curry.swift */; };
		OBJ_389 /* Const.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_19 /* Const.swift */; };
		OBJ_390 /* Coproduct.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_20 /* Coproduct.swift */; };
		OBJ_391 /* Coreader.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_21 /* Coreader.swift */; };
		OBJ_392 /* Either.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_22 /* Either.swift */; };
		OBJ_393 /* Eval.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_23 /* Eval.swift */; };
		OBJ_394 /* FlatmapOperator.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_24 /* FlatmapOperator.swift */; };
		OBJ_395 /* Id.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_25 /* Id.swift */; };
		OBJ_396 /* Ior.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_26 /* Ior.swift */; };
		OBJ_397 /* ListKW.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_27 /* ListKW.swift */; };
		OBJ_398 /* MapKW.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_28 /* MapKW.swift */; };
		OBJ_399 /* Maybe.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_29 /* Maybe.swift */; };
		OBJ_400 /* NonEmptyList.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_30 /* NonEmptyList.swift */; };
		OBJ_401 /* Reader.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_31 /* Reader.swift */; };
		OBJ_402 /* State.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_32 /* State.swift */; };
		OBJ_403 /* Try.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_33 /* Try.swift */; };
		OBJ_404 /* Tuple.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_34 /* Tuple.swift */; };
		OBJ_405 /* Validated.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_35 /* Validated.swift */; };
		OBJ_406 /* AsyncContext.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_37 /* AsyncContext.swift */; };
		OBJ_407 /* IO.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_38 /* IO.swift */; };
		OBJ_408 /* Cofree.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_40 /* Cofree.swift */; };
		OBJ_409 /* Coyoneda.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_41 /* Coyoneda.swift */; };
		OBJ_410 /* Free.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_42 /* Free.swift */; };
		OBJ_411 /* Yoneda.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_43 /* Yoneda.swift */; };
		OBJ_412 /* HigherKinds.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_44 /* HigherKinds.swift */; };
		OBJ_413 /* NumberInstances.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_46 /* NumberInstances.swift */; };
		OBJ_414 /* StringInstances.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_47 /* StringInstances.swift */; };
		OBJ_415 /* PartialApplication.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_48 /* PartialApplication.swift */; };
		OBJ_416 /* Predef.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_49 /* Predef.swift */; };
		OBJ_417 /* EitherT.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_51 /* EitherT.swift */; };
		OBJ_418 /* MaybeT.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_52 /* MaybeT.swift */; };
		OBJ_419 /* StateT.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_53 /* StateT.swift */; };
		OBJ_420 /* WriterT.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_54 /* WriterT.swift */; };
		OBJ_421 /* Typeclass.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_55 /* Typeclass.swift */; };
		OBJ_422 /* Alternative.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_57 /* Alternative.swift */; };
		OBJ_423 /* Applicative.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_58 /* Applicative.swift */; };
		OBJ_424 /* ApplicativeError.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_59 /* ApplicativeError.swift */; };
		OBJ_425 /* Bifoldable.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_60 /* Bifoldable.swift */; };
		OBJ_426 /* Bimonad.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_61 /* Bimonad.swift */; };
		OBJ_427 /* Comonad.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_62 /* Comonad.swift */; };
		OBJ_428 /* Composed.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_64 /* Composed.swift */; };
		OBJ_429 /* ComposedFoldable.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_65 /* ComposedFoldable.swift */; };
		OBJ_430 /* Eq.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_66 /* Eq.swift */; };
		OBJ_431 /* Foldable.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_67 /* Foldable.swift */; };
		OBJ_432 /* Functor.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_68 /* Functor.swift */; };
		OBJ_433 /* FunctorFilter.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_69 /* FunctorFilter.swift */; };
		OBJ_434 /* Inject.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_70 /* Inject.swift */; };
		OBJ_435 /* Monad.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_71 /* Monad.swift */; };
		OBJ_436 /* MonadCombine.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_72 /* MonadCombine.swift */; };
		OBJ_437 /* MonadError.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_73 /* MonadError.swift */; };
		OBJ_438 /* MonadFilter.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_74 /* MonadFilter.swift */; };
		OBJ_439 /* MonadReader.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_75 /* MonadReader.swift */; };
		OBJ_440 /* MonadState.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_76 /* MonadState.swift */; };
		OBJ_441 /* MonadWriter.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_77 /* MonadWriter.swift */; };
		OBJ_442 /* Monoid.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_78 /* Monoid.swift */; };
		OBJ_443 /* MonoidK.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_79 /* MonoidK.swift */; };
		OBJ_444 /* NonEmptyReducible.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_80 /* NonEmptyReducible.swift */; };
		OBJ_445 /* Order.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_81 /* Order.swift */; };
		OBJ_446 /* Reducible.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_82 /* Reducible.swift */; };
		OBJ_447 /* Semigroup.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_83 /* Semigroup.swift */; };
		OBJ_448 /* SemigroupK.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_84 /* SemigroupK.swift */; };
		OBJ_449 /* Traverse.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_85 /* Traverse.swift */; };
		OBJ_450 /* TraverseFilter.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_86 /* TraverseFilter.swift */; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		D653FC432067C58D00535EF6 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Nimble::Nimble";
			remoteInfo = Nimble;
		};
		D653FC442067C58D00535EF6 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "SwiftCheck::SwiftCheck";
			remoteInfo = SwiftCheck;
		};
		D653FC452067C58D00535EF6 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Bow::Bow";
			remoteInfo = Bow;
		};
		D653FC462067C58E00535EF6 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Bow::BowTests";
			remoteInfo = BowTests;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		"Bow::Bow::Product" /* Bow.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; path = Bow.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		"Bow::BowTests::Product" /* BowTests.xctest */ = {isa = PBXFileReference; lastKnownFileType = file; path = BowTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
		"Nimble::Nimble::Product" /* Nimble.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; path = Nimble.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		OBJ_10 /* Cokleisli.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Cokleisli.swift; sourceTree = "<group>"; };
		OBJ_100 /* EvalTest.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = EvalTest.swift; sourceTree = "<group>"; };
		OBJ_101 /* IdTest.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = IdTest.swift; sourceTree = "<group>"; };
		OBJ_102 /* IorTest.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = IorTest.swift; sourceTree = "<group>"; };
		OBJ_103 /* ListKWTest.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ListKWTest.swift; sourceTree = "<group>"; };
		OBJ_104 /* MaybeTest.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MaybeTest.swift; sourceTree = "<group>"; };
		OBJ_105 /* NonEmptyListTest.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = NonEmptyListTest.swift; sourceTree = "<group>"; };
		OBJ_106 /* TryTest.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = TryTest.swift; sourceTree = "<group>"; };
		OBJ_107 /* TupleTest.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = TupleTest.swift; sourceTree = "<group>"; };
		OBJ_108 /* ValidatedTest.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ValidatedTest.swift; sourceTree = "<group>"; };
		OBJ_11 /* Function0.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Function0.swift; sourceTree = "<group>"; };
		OBJ_110 /* AsyncContextLaws.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = AsyncContextLaws.swift; sourceTree = "<group>"; };
		OBJ_111 /* IOTest.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = IOTest.swift; sourceTree = "<group>"; };
		OBJ_113 /* FreeTest.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = FreeTest.swift; sourceTree = "<group>"; };
		OBJ_115 /* NumberInstancesTest.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = NumberInstancesTest.swift; sourceTree = "<group>"; };
		OBJ_116 /* StringInstancesTest.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = StringInstancesTest.swift; sourceTree = "<group>"; };
		OBJ_117 /* PartialApplicationTest.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = PartialApplicationTest.swift; sourceTree = "<group>"; };
		OBJ_118 /* PredefTest.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = PredefTest.swift; sourceTree = "<group>"; };
		OBJ_12 /* Function1.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Function1.swift; sourceTree = "<group>"; };
		OBJ_120 /* EitherTTest.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = EitherTTest.swift; sourceTree = "<group>"; };
		OBJ_121 /* MaybeTTest.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MaybeTTest.swift; sourceTree = "<group>"; };
		OBJ_122 /* StateTTest.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = StateTTest.swift; sourceTree = "<group>"; };
		OBJ_123 /* WriterTTest.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = WriterTTest.swift; sourceTree = "<group>"; };
		OBJ_125 /* ApplicativeErrorLaws.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ApplicativeErrorLaws.swift; sourceTree = "<group>"; };
		OBJ_126 /* ApplicativeLaws.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ApplicativeLaws.swift; sourceTree = "<group>"; };
		OBJ_127 /* ComonadLaws.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ComonadLaws.swift; sourceTree = "<group>"; };
		OBJ_128 /* EqLaws.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = EqLaws.swift; sourceTree = "<group>"; };
		OBJ_129 /* FunctorFilterLaws.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = FunctorFilterLaws.swift; sourceTree = "<group>"; };
		OBJ_13 /* FunctionK.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = FunctionK.swift; sourceTree = "<group>"; };
		OBJ_130 /* FunctorLaws.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = FunctorLaws.swift; sourceTree = "<group>"; };
		OBJ_131 /* MonadErrorLaws.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MonadErrorLaws.swift; sourceTree = "<group>"; };
		OBJ_132 /* MonadFilterLaws.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MonadFilterLaws.swift; sourceTree = "<group>"; };
		OBJ_133 /* MonadLaws.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MonadLaws.swift; sourceTree = "<group>"; };
		OBJ_134 /* MonadStateLaws.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MonadStateLaws.swift; sourceTree = "<group>"; };
		OBJ_135 /* MonadWriterLaws.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MonadWriterLaws.swift; sourceTree = "<group>"; };
		OBJ_136 /* MonoidKLaws.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MonoidKLaws.swift; sourceTree = "<group>"; };
		OBJ_137 /* MonoidLaws.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MonoidLaws.swift; sourceTree = "<group>"; };
		OBJ_138 /* OrderLaws.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = OrderLaws.swift; sourceTree = "<group>"; };
		OBJ_139 /* SemigroupKLaws.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SemigroupKLaws.swift; sourceTree = "<group>"; };
		OBJ_14 /* Kleisli.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Kleisli.swift; sourceTree = "<group>"; };
		OBJ_140 /* SemigroupLaws.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SemigroupLaws.swift; sourceTree = "<group>"; };
		OBJ_145 /* AdapterProtocols.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = AdapterProtocols.swift; sourceTree = "<group>"; };
		OBJ_146 /* AssertionDispatcher.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = AssertionDispatcher.swift; sourceTree = "<group>"; };
		OBJ_147 /* AssertionRecorder.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = AssertionRecorder.swift; sourceTree = "<group>"; };
		OBJ_148 /* NMBExpectation.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = NMBExpectation.swift; sourceTree = "<group>"; };
		OBJ_149 /* NMBObjCMatcher.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = NMBObjCMatcher.swift; sourceTree = "<group>"; };
		OBJ_15 /* KleisliOperator.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = KleisliOperator.swift; sourceTree = "<group>"; };
		OBJ_150 /* NimbleEnvironment.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = NimbleEnvironment.swift; sourceTree = "<group>"; };
		OBJ_151 /* NimbleXCTestHandler.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = NimbleXCTestHandler.swift; sourceTree = "<group>"; };
		OBJ_153 /* ExceptionCapture.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ExceptionCapture.swift; sourceTree = "<group>"; };
		OBJ_154 /* DSL+Wait.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "DSL+Wait.swift"; sourceTree = "<group>"; };
		OBJ_155 /* DSL.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = DSL.swift; sourceTree = "<group>"; };
		OBJ_156 /* Expectation.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Expectation.swift; sourceTree = "<group>"; };
		OBJ_157 /* ExpectationMessage.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ExpectationMessage.swift; sourceTree = "<group>"; };
		OBJ_158 /* Expression.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Expression.swift; sourceTree = "<group>"; };
		OBJ_159 /* FailureMessage.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = FailureMessage.swift; sourceTree = "<group>"; };
		OBJ_16 /* BooleanFunctions.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BooleanFunctions.swift; sourceTree = "<group>"; };
		OBJ_161 /* AllPass.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = AllPass.swift; sourceTree = "<group>"; };
		OBJ_162 /* AsyncMatcherWrapper.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = AsyncMatcherWrapper.swift; sourceTree = "<group>"; };
		OBJ_163 /* BeAKindOf.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BeAKindOf.swift; sourceTree = "<group>"; };
		OBJ_164 /* BeAnInstanceOf.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BeAnInstanceOf.swift; sourceTree = "<group>"; };
		OBJ_165 /* BeCloseTo.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BeCloseTo.swift; sourceTree = "<group>"; };
		OBJ_166 /* BeEmpty.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BeEmpty.swift; sourceTree = "<group>"; };
		OBJ_167 /* BeGreaterThan.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BeGreaterThan.swift; sourceTree = "<group>"; };
		OBJ_168 /* BeGreaterThanOrEqualTo.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BeGreaterThanOrEqualTo.swift; sourceTree = "<group>"; };
		OBJ_169 /* BeIdenticalTo.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BeIdenticalTo.swift; sourceTree = "<group>"; };
		OBJ_17 /* Curry.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Curry.swift; sourceTree = "<group>"; };
		OBJ_170 /* BeLessThan.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BeLessThan.swift; sourceTree = "<group>"; };
		OBJ_171 /* BeLessThanOrEqual.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BeLessThanOrEqual.swift; sourceTree = "<group>"; };
		OBJ_172 /* BeLogical.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BeLogical.swift; sourceTree = "<group>"; };
		OBJ_173 /* BeNil.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BeNil.swift; sourceTree = "<group>"; };
		OBJ_174 /* BeVoid.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BeVoid.swift; sourceTree = "<group>"; };
		OBJ_175 /* BeginWith.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BeginWith.swift; sourceTree = "<group>"; };
		OBJ_176 /* Contain.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Contain.swift; sourceTree = "<group>"; };
		OBJ_177 /* ContainElementSatisfying.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ContainElementSatisfying.swift; sourceTree = "<group>"; };
		OBJ_178 /* EndWith.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = EndWith.swift; sourceTree = "<group>"; };
		OBJ_179 /* Equal.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Equal.swift; sourceTree = "<group>"; };
		OBJ_180 /* HaveCount.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = HaveCount.swift; sourceTree = "<group>"; };
		OBJ_181 /* Match.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Match.swift; sourceTree = "<group>"; };
		OBJ_182 /* MatchError.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MatchError.swift; sourceTree = "<group>"; };
		OBJ_183 /* MatcherFunc.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MatcherFunc.swift; sourceTree = "<group>"; };
		OBJ_184 /* MatcherProtocols.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MatcherProtocols.swift; sourceTree = "<group>"; };
		OBJ_185 /* PostNotification.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = PostNotification.swift; sourceTree = "<group>"; };
		OBJ_186 /* Predicate.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Predicate.swift; sourceTree = "<group>"; };
		OBJ_187 /* RaisesException.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = RaisesException.swift; sourceTree = "<group>"; };
		OBJ_188 /* SatisfyAnyOf.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SatisfyAnyOf.swift; sourceTree = "<group>"; };
		OBJ_189 /* ThrowAssertion.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ThrowAssertion.swift; sourceTree = "<group>"; };
		OBJ_19 /* Const.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Const.swift; sourceTree = "<group>"; };
		OBJ_190 /* ThrowError.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ThrowError.swift; sourceTree = "<group>"; };
		OBJ_191 /* ToSucceed.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ToSucceed.swift; sourceTree = "<group>"; };
		OBJ_193 /* Async.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Async.swift; sourceTree = "<group>"; };
		OBJ_194 /* Errors.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Errors.swift; sourceTree = "<group>"; };
		OBJ_195 /* Functional.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Functional.swift; sourceTree = "<group>"; };
		OBJ_196 /* SourceLocation.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SourceLocation.swift; sourceTree = "<group>"; };
		OBJ_197 /* Stringers.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Stringers.swift; sourceTree = "<group>"; };
		OBJ_198 /* Package.swift */ = {isa = PBXFileReference; explicitFileType = sourcecode.swift; name = Package.swift; path = "/Users/victorg/Documents/Personal/FunctionalHub/Swift/bow/.build/checkouts/Nimble--4242004824474893651/Package.swift"; sourceTree = "<group>"; };
		OBJ_20 /* Coproduct.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Coproduct.swift; sourceTree = "<group>"; };
		OBJ_201 /* Arbitrary.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Arbitrary.swift; sourceTree = "<group>"; };
		OBJ_202 /* Cartesian.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Cartesian.swift; sourceTree = "<group>"; };
		OBJ_203 /* Check.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Check.swift; sourceTree = "<group>"; };
		OBJ_204 /* CoArbitrary.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CoArbitrary.swift; sourceTree = "<group>"; };
		OBJ_205 /* Compose.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Compose.swift; sourceTree = "<group>"; };
		OBJ_206 /* Gen.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Gen.swift; sourceTree = "<group>"; };
		OBJ_207 /* Lattice.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Lattice.swift; sourceTree = "<group>"; };
		OBJ_208 /* Modifiers.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Modifiers.swift; sourceTree = "<group>"; };
		OBJ_209 /* Property.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Property.swift; sourceTree = "<group>"; };
		OBJ_21 /* Coreader.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Coreader.swift; sourceTree = "<group>"; };
		OBJ_210 /* Random.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Random.swift; sourceTree = "<group>"; };
		OBJ_211 /* Rose.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Rose.swift; sourceTree = "<group>"; };
		OBJ_212 /* State.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = State.swift; sourceTree = "<group>"; };
		OBJ_213 /* Test.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Test.swift; sourceTree = "<group>"; };
		OBJ_214 /* Testable.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Testable.swift; sourceTree = "<group>"; };
		OBJ_215 /* Witness.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Witness.swift; sourceTree = "<group>"; };
		OBJ_216 /* WitnessedArbitrary.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = WitnessedArbitrary.swift; sourceTree = "<group>"; };
		OBJ_217 /* Package.swift */ = {isa = PBXFileReference; explicitFileType = sourcecode.swift; name = Package.swift; path = "/Users/victorg/Documents/Personal/FunctionalHub/Swift/bow/.build/checkouts/SwiftCheck--6609442531415794310/Package.swift"; sourceTree = "<group>"; };
		OBJ_22 /* Either.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Either.swift; sourceTree = "<group>"; };
		OBJ_23 /* Eval.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Eval.swift; sourceTree = "<group>"; };
		OBJ_24 /* FlatmapOperator.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = FlatmapOperator.swift; sourceTree = "<group>"; };
		OBJ_25 /* Id.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Id.swift; sourceTree = "<group>"; };
		OBJ_26 /* Ior.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Ior.swift; sourceTree = "<group>"; };
		OBJ_27 /* ListKW.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ListKW.swift; sourceTree = "<group>"; };
		OBJ_28 /* MapKW.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MapKW.swift; sourceTree = "<group>"; };
		OBJ_29 /* Maybe.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Maybe.swift; sourceTree = "<group>"; };
		OBJ_30 /* NonEmptyList.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = NonEmptyList.swift; sourceTree = "<group>"; };
		OBJ_31 /* Reader.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Reader.swift; sourceTree = "<group>"; };
		OBJ_32 /* State.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = State.swift; sourceTree = "<group>"; };
		OBJ_33 /* Try.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Try.swift; sourceTree = "<group>"; };
		OBJ_34 /* Tuple.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Tuple.swift; sourceTree = "<group>"; };
		OBJ_35 /* Validated.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Validated.swift; sourceTree = "<group>"; };
		OBJ_37 /* AsyncContext.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = AsyncContext.swift; sourceTree = "<group>"; };
		OBJ_38 /* IO.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = IO.swift; sourceTree = "<group>"; };
		OBJ_40 /* Cofree.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Cofree.swift; sourceTree = "<group>"; };
		OBJ_41 /* Coyoneda.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Coyoneda.swift; sourceTree = "<group>"; };
		OBJ_42 /* Free.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Free.swift; sourceTree = "<group>"; };
		OBJ_43 /* Yoneda.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Yoneda.swift; sourceTree = "<group>"; };
		OBJ_44 /* HigherKinds.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = HigherKinds.swift; sourceTree = "<group>"; };
		OBJ_46 /* NumberInstances.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = NumberInstances.swift; sourceTree = "<group>"; };
		OBJ_47 /* StringInstances.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = StringInstances.swift; sourceTree = "<group>"; };
		OBJ_48 /* PartialApplication.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = PartialApplication.swift; sourceTree = "<group>"; };
		OBJ_49 /* Predef.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Predef.swift; sourceTree = "<group>"; };
		OBJ_51 /* EitherT.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = EitherT.swift; sourceTree = "<group>"; };
		OBJ_52 /* MaybeT.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MaybeT.swift; sourceTree = "<group>"; };
		OBJ_53 /* StateT.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = StateT.swift; sourceTree = "<group>"; };
		OBJ_54 /* WriterT.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = WriterT.swift; sourceTree = "<group>"; };
		OBJ_55 /* Typeclass.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Typeclass.swift; sourceTree = "<group>"; };
		OBJ_57 /* Alternative.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Alternative.swift; sourceTree = "<group>"; };
		OBJ_58 /* Applicative.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Applicative.swift; sourceTree = "<group>"; };
		OBJ_59 /* ApplicativeError.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ApplicativeError.swift; sourceTree = "<group>"; };
		OBJ_6 /* Package.swift */ = {isa = PBXFileReference; explicitFileType = sourcecode.swift; path = Package.swift; sourceTree = "<group>"; };
		OBJ_60 /* Bifoldable.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Bifoldable.swift; sourceTree = "<group>"; };
		OBJ_61 /* Bimonad.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Bimonad.swift; sourceTree = "<group>"; };
		OBJ_62 /* Comonad.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Comonad.swift; sourceTree = "<group>"; };
		OBJ_64 /* Composed.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Composed.swift; sourceTree = "<group>"; };
		OBJ_65 /* ComposedFoldable.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ComposedFoldable.swift; sourceTree = "<group>"; };
		OBJ_66 /* Eq.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Eq.swift; sourceTree = "<group>"; };
		OBJ_67 /* Foldable.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Foldable.swift; sourceTree = "<group>"; };
		OBJ_68 /* Functor.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Functor.swift; sourceTree = "<group>"; };
		OBJ_69 /* FunctorFilter.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = FunctorFilter.swift; sourceTree = "<group>"; };
		OBJ_70 /* Inject.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Inject.swift; sourceTree = "<group>"; };
		OBJ_71 /* Monad.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Monad.swift; sourceTree = "<group>"; };
		OBJ_72 /* MonadCombine.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MonadCombine.swift; sourceTree = "<group>"; };
		OBJ_73 /* MonadError.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MonadError.swift; sourceTree = "<group>"; };
		OBJ_74 /* MonadFilter.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MonadFilter.swift; sourceTree = "<group>"; };
		OBJ_75 /* MonadReader.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MonadReader.swift; sourceTree = "<group>"; };
		OBJ_76 /* MonadState.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MonadState.swift; sourceTree = "<group>"; };
		OBJ_77 /* MonadWriter.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MonadWriter.swift; sourceTree = "<group>"; };
		OBJ_78 /* Monoid.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Monoid.swift; sourceTree = "<group>"; };
		OBJ_79 /* MonoidK.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MonoidK.swift; sourceTree = "<group>"; };
		OBJ_80 /* NonEmptyReducible.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = NonEmptyReducible.swift; sourceTree = "<group>"; };
		OBJ_81 /* Order.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Order.swift; sourceTree = "<group>"; };
		OBJ_82 /* Reducible.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Reducible.swift; sourceTree = "<group>"; };
		OBJ_83 /* Semigroup.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Semigroup.swift; sourceTree = "<group>"; };
		OBJ_84 /* SemigroupK.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SemigroupK.swift; sourceTree = "<group>"; };
		OBJ_85 /* Traverse.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Traverse.swift; sourceTree = "<group>"; };
		OBJ_86 /* TraverseFilter.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = TraverseFilter.swift; sourceTree = "<group>"; };
		OBJ_90 /* Function0Test.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Function0Test.swift; sourceTree = "<group>"; };
		OBJ_91 /* Function1Test.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Function1Test.swift; sourceTree = "<group>"; };
		OBJ_92 /* KleisliOperatorTest.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = KleisliOperatorTest.swift; sourceTree = "<group>"; };
		OBJ_93 /* KleisliTest.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = KleisliTest.swift; sourceTree = "<group>"; };
		OBJ_94 /* BooleanFunctionsTest.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BooleanFunctionsTest.swift; sourceTree = "<group>"; };
		OBJ_95 /* CurryTest.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CurryTest.swift; sourceTree = "<group>"; };
		OBJ_97 /* ConstTest.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ConstTest.swift; sourceTree = "<group>"; };
		OBJ_98 /* CoproductTest.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CoproductTest.swift; sourceTree = "<group>"; };
		OBJ_99 /* EitherTest.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = EitherTest.swift; sourceTree = "<group>"; };
		"SwiftCheck::SwiftCheck::Product" /* SwiftCheck.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; path = SwiftCheck.framework; sourceTree = BUILT_PRODUCTS_DIR; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		OBJ_291 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_292 /* Nimble.framework in Frameworks */,
				OBJ_293 /* SwiftCheck.framework in Frameworks */,
				OBJ_294 /* Bow.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_355 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_376 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_451 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		OBJ_109 /* Effects */ = {
			isa = PBXGroup;
			children = (
				OBJ_110 /* AsyncContextLaws.swift */,
				OBJ_111 /* IOTest.swift */,
			);
			path = Effects;
			sourceTree = "<group>";
		};
		OBJ_112 /* Free */ = {
			isa = PBXGroup;
			children = (
				OBJ_113 /* FreeTest.swift */,
			);
			path = Free;
			sourceTree = "<group>";
		};
		OBJ_114 /* Instances */ = {
			isa = PBXGroup;
			children = (
				OBJ_115 /* NumberInstancesTest.swift */,
				OBJ_116 /* StringInstancesTest.swift */,
			);
			path = Instances;
			sourceTree = "<group>";
		};
		OBJ_119 /* Transformers */ = {
			isa = PBXGroup;
			children = (
				OBJ_120 /* EitherTTest.swift */,
				OBJ_121 /* MaybeTTest.swift */,
				OBJ_122 /* StateTTest.swift */,
				OBJ_123 /* WriterTTest.swift */,
			);
			path = Transformers;
			sourceTree = "<group>";
		};
		OBJ_124 /* Typeclasses */ = {
			isa = PBXGroup;
			children = (
				OBJ_125 /* ApplicativeErrorLaws.swift */,
				OBJ_126 /* ApplicativeLaws.swift */,
				OBJ_127 /* ComonadLaws.swift */,
				OBJ_128 /* EqLaws.swift */,
				OBJ_129 /* FunctorFilterLaws.swift */,
				OBJ_130 /* FunctorLaws.swift */,
				OBJ_131 /* MonadErrorLaws.swift */,
				OBJ_132 /* MonadFilterLaws.swift */,
				OBJ_133 /* MonadLaws.swift */,
				OBJ_134 /* MonadStateLaws.swift */,
				OBJ_135 /* MonadWriterLaws.swift */,
				OBJ_136 /* MonoidKLaws.swift */,
				OBJ_137 /* MonoidLaws.swift */,
				OBJ_138 /* OrderLaws.swift */,
				OBJ_139 /* SemigroupKLaws.swift */,
				OBJ_140 /* SemigroupLaws.swift */,
			);
			path = Typeclasses;
			sourceTree = "<group>";
		};
		OBJ_141 /* Dependencies */ = {
			isa = PBXGroup;
			children = (
				OBJ_142 /* Nimble 7.0.3 */,
				OBJ_199 /* SwiftCheck 0.9.1 */,
			);
			name = Dependencies;
			sourceTree = "<group>";
		};
		OBJ_142 /* Nimble 7.0.3 */ = {
			isa = PBXGroup;
			children = (
				OBJ_143 /* Nimble */,
				OBJ_198 /* Package.swift */,
			);
			name = "Nimble 7.0.3";
			sourceTree = SOURCE_ROOT;
		};
		OBJ_143 /* Nimble */ = {
			isa = PBXGroup;
			children = (
				OBJ_144 /* Adapters */,
				OBJ_154 /* DSL+Wait.swift */,
				OBJ_155 /* DSL.swift */,
				OBJ_156 /* Expectation.swift */,
				OBJ_157 /* ExpectationMessage.swift */,
				OBJ_158 /* Expression.swift */,
				OBJ_159 /* FailureMessage.swift */,
				OBJ_160 /* Matchers */,
				OBJ_192 /* Utils */,
			);
			name = Nimble;
			path = ".build/checkouts/Nimble--4242004824474893651/Sources/Nimble";
			sourceTree = SOURCE_ROOT;
		};
		OBJ_144 /* Adapters */ = {
			isa = PBXGroup;
			children = (
				OBJ_145 /* AdapterProtocols.swift */,
				OBJ_146 /* AssertionDispatcher.swift */,
				OBJ_147 /* AssertionRecorder.swift */,
				OBJ_148 /* NMBExpectation.swift */,
				OBJ_149 /* NMBObjCMatcher.swift */,
				OBJ_150 /* NimbleEnvironment.swift */,
				OBJ_151 /* NimbleXCTestHandler.swift */,
				OBJ_152 /* NonObjectiveC */,
			);
			path = Adapters;
			sourceTree = "<group>";
		};
		OBJ_152 /* NonObjectiveC */ = {
			isa = PBXGroup;
			children = (
				OBJ_153 /* ExceptionCapture.swift */,
			);
			path = NonObjectiveC;
			sourceTree = "<group>";
		};
		OBJ_160 /* Matchers */ = {
			isa = PBXGroup;
			children = (
				OBJ_161 /* AllPass.swift */,
				OBJ_162 /* AsyncMatcherWrapper.swift */,
				OBJ_163 /* BeAKindOf.swift */,
				OBJ_164 /* BeAnInstanceOf.swift */,
				OBJ_165 /* BeCloseTo.swift */,
				OBJ_166 /* BeEmpty.swift */,
				OBJ_167 /* BeGreaterThan.swift */,
				OBJ_168 /* BeGreaterThanOrEqualTo.swift */,
				OBJ_169 /* BeIdenticalTo.swift */,
				OBJ_170 /* BeLessThan.swift */,
				OBJ_171 /* BeLessThanOrEqual.swift */,
				OBJ_172 /* BeLogical.swift */,
				OBJ_173 /* BeNil.swift */,
				OBJ_174 /* BeVoid.swift */,
				OBJ_175 /* BeginWith.swift */,
				OBJ_176 /* Contain.swift */,
				OBJ_177 /* ContainElementSatisfying.swift */,
				OBJ_178 /* EndWith.swift */,
				OBJ_179 /* Equal.swift */,
				OBJ_180 /* HaveCount.swift */,
				OBJ_181 /* Match.swift */,
				OBJ_182 /* MatchError.swift */,
				OBJ_183 /* MatcherFunc.swift */,
				OBJ_184 /* MatcherProtocols.swift */,
				OBJ_185 /* PostNotification.swift */,
				OBJ_186 /* Predicate.swift */,
				OBJ_187 /* RaisesException.swift */,
				OBJ_188 /* SatisfyAnyOf.swift */,
				OBJ_189 /* ThrowAssertion.swift */,
				OBJ_190 /* ThrowError.swift */,
				OBJ_191 /* ToSucceed.swift */,
			);
			path = Matchers;
			sourceTree = "<group>";
		};
		OBJ_18 /* Data */ = {
			isa = PBXGroup;
			children = (
				OBJ_19 /* Const.swift */,
				OBJ_20 /* Coproduct.swift */,
				OBJ_21 /* Coreader.swift */,
				OBJ_22 /* Either.swift */,
				OBJ_23 /* Eval.swift */,
				OBJ_24 /* FlatmapOperator.swift */,
				OBJ_25 /* Id.swift */,
				OBJ_26 /* Ior.swift */,
				OBJ_27 /* ListKW.swift */,
				OBJ_28 /* MapKW.swift */,
				OBJ_29 /* Maybe.swift */,
				OBJ_30 /* NonEmptyList.swift */,
				OBJ_31 /* Reader.swift */,
				OBJ_32 /* State.swift */,
				OBJ_33 /* Try.swift */,
				OBJ_34 /* Tuple.swift */,
				OBJ_35 /* Validated.swift */,
			);
			path = Data;
			sourceTree = "<group>";
		};
		OBJ_192 /* Utils */ = {
			isa = PBXGroup;
			children = (
				OBJ_193 /* Async.swift */,
				OBJ_194 /* Errors.swift */,
				OBJ_195 /* Functional.swift */,
				OBJ_196 /* SourceLocation.swift */,
				OBJ_197 /* Stringers.swift */,
			);
			path = Utils;
			sourceTree = "<group>";
		};
		OBJ_199 /* SwiftCheck 0.9.1 */ = {
			isa = PBXGroup;
			children = (
				OBJ_200 /* SwiftCheck */,
				OBJ_217 /* Package.swift */,
			);
			name = "SwiftCheck 0.9.1";
			sourceTree = SOURCE_ROOT;
		};
		OBJ_200 /* SwiftCheck */ = {
			isa = PBXGroup;
			children = (
				OBJ_201 /* Arbitrary.swift */,
				OBJ_202 /* Cartesian.swift */,
				OBJ_203 /* Check.swift */,
				OBJ_204 /* CoArbitrary.swift */,
				OBJ_205 /* Compose.swift */,
				OBJ_206 /* Gen.swift */,
				OBJ_207 /* Lattice.swift */,
				OBJ_208 /* Modifiers.swift */,
				OBJ_209 /* Property.swift */,
				OBJ_210 /* Random.swift */,
				OBJ_211 /* Rose.swift */,
				OBJ_212 /* State.swift */,
				OBJ_213 /* Test.swift */,
				OBJ_214 /* Testable.swift */,
				OBJ_215 /* Witness.swift */,
				OBJ_216 /* WitnessedArbitrary.swift */,
			);
			name = SwiftCheck;
			path = ".build/checkouts/SwiftCheck--6609442531415794310/Sources/SwiftCheck";
			sourceTree = SOURCE_ROOT;
		};
		OBJ_218 /* Products */ = {
			isa = PBXGroup;
			children = (
				"Bow::BowTests::Product" /* BowTests.xctest */,
				"Nimble::Nimble::Product" /* Nimble.framework */,
				"SwiftCheck::SwiftCheck::Product" /* SwiftCheck.framework */,
				"Bow::Bow::Product" /* Bow.framework */,
			);
			name = Products;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		OBJ_36 /* Effects */ = {
			isa = PBXGroup;
			children = (
				OBJ_37 /* AsyncContext.swift */,
				OBJ_38 /* IO.swift */,
			);
			path = Effects;
			sourceTree = "<group>";
		};
		OBJ_39 /* Free */ = {
			isa = PBXGroup;
			children = (
				OBJ_40 /* Cofree.swift */,
				OBJ_41 /* Coyoneda.swift */,
				OBJ_42 /* Free.swift */,
				OBJ_43 /* Yoneda.swift */,
			);
			path = Free;
			sourceTree = "<group>";
		};
		OBJ_45 /* Instances */ = {
			isa = PBXGroup;
			children = (
				OBJ_46 /* NumberInstances.swift */,
				OBJ_47 /* StringInstances.swift */,
			);
			path = Instances;
			sourceTree = "<group>";
		};
		OBJ_5 /*  */ = {
			isa = PBXGroup;
			children = (
				OBJ_6 /* Package.swift */,
				OBJ_7 /* Sources */,
				OBJ_87 /* Tests */,
				OBJ_141 /* Dependencies */,
				OBJ_218 /* Products */,
			);
			name = "";
			sourceTree = "<group>";
		};
		OBJ_50 /* Transformers */ = {
			isa = PBXGroup;
			children = (
				OBJ_51 /* EitherT.swift */,
				OBJ_52 /* MaybeT.swift */,
				OBJ_53 /* StateT.swift */,
				OBJ_54 /* WriterT.swift */,
			);
			path = Transformers;
			sourceTree = "<group>";
		};
		OBJ_56 /* Typeclasses */ = {
			isa = PBXGroup;
			children = (
				OBJ_57 /* Alternative.swift */,
				OBJ_58 /* Applicative.swift */,
				OBJ_59 /* ApplicativeError.swift */,
				OBJ_60 /* Bifoldable.swift */,
				OBJ_61 /* Bimonad.swift */,
				OBJ_62 /* Comonad.swift */,
				OBJ_63 /* Composed */,
				OBJ_66 /* Eq.swift */,
				OBJ_67 /* Foldable.swift */,
				OBJ_68 /* Functor.swift */,
				OBJ_69 /* FunctorFilter.swift */,
				OBJ_70 /* Inject.swift */,
				OBJ_71 /* Monad.swift */,
				OBJ_72 /* MonadCombine.swift */,
				OBJ_73 /* MonadError.swift */,
				OBJ_74 /* MonadFilter.swift */,
				OBJ_75 /* MonadReader.swift */,
				OBJ_76 /* MonadState.swift */,
				OBJ_77 /* MonadWriter.swift */,
				OBJ_78 /* Monoid.swift */,
				OBJ_79 /* MonoidK.swift */,
				OBJ_80 /* NonEmptyReducible.swift */,
				OBJ_81 /* Order.swift */,
				OBJ_82 /* Reducible.swift */,
				OBJ_83 /* Semigroup.swift */,
				OBJ_84 /* SemigroupK.swift */,
				OBJ_85 /* Traverse.swift */,
				OBJ_86 /* TraverseFilter.swift */,
			);
			path = Typeclasses;
			sourceTree = "<group>";
		};
		OBJ_63 /* Composed */ = {
			isa = PBXGroup;
			children = (
				OBJ_64 /* Composed.swift */,
				OBJ_65 /* ComposedFoldable.swift */,
			);
			path = Composed;
			sourceTree = "<group>";
		};
		OBJ_7 /* Sources */ = {
			isa = PBXGroup;
			children = (
				OBJ_8 /* Bow */,
			);
			path = Sources;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_8 /* Bow */ = {
			isa = PBXGroup;
			children = (
				OBJ_9 /* Arrow */,
				OBJ_16 /* BooleanFunctions.swift */,
				OBJ_17 /* Curry.swift */,
				OBJ_18 /* Data */,
				OBJ_36 /* Effects */,
				OBJ_39 /* Free */,
				OBJ_44 /* HigherKinds.swift */,
				OBJ_45 /* Instances */,
				OBJ_48 /* PartialApplication.swift */,
				OBJ_49 /* Predef.swift */,
				OBJ_50 /* Transformers */,
				OBJ_55 /* Typeclass.swift */,
				OBJ_56 /* Typeclasses */,
			);
			path = Bow;
			sourceTree = "<group>";
		};
		OBJ_87 /* Tests */ = {
			isa = PBXGroup;
			children = (
				OBJ_88 /* BowTests */,
			);
			path = Tests;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_88 /* BowTests */ = {
			isa = PBXGroup;
			children = (
				OBJ_89 /* Arrow */,
				OBJ_94 /* BooleanFunctionsTest.swift */,
				OBJ_95 /* CurryTest.swift */,
				OBJ_96 /* Data */,
				OBJ_109 /* Effects */,
				OBJ_112 /* Free */,
				OBJ_114 /* Instances */,
				OBJ_117 /* PartialApplicationTest.swift */,
				OBJ_118 /* PredefTest.swift */,
				OBJ_119 /* Transformers */,
				OBJ_124 /* Typeclasses */,
			);
			path = BowTests;
			sourceTree = "<group>";
		};
		OBJ_89 /* Arrow */ = {
			isa = PBXGroup;
			children = (
				OBJ_90 /* Function0Test.swift */,
				OBJ_91 /* Function1Test.swift */,
				OBJ_92 /* KleisliOperatorTest.swift */,
				OBJ_93 /* KleisliTest.swift */,
			);
			path = Arrow;
			sourceTree = "<group>";
		};
		OBJ_9 /* Arrow */ = {
			isa = PBXGroup;
			children = (
				OBJ_10 /* Cokleisli.swift */,
				OBJ_11 /* Function0.swift */,
				OBJ_12 /* Function1.swift */,
				OBJ_13 /* FunctionK.swift */,
				OBJ_14 /* Kleisli.swift */,
				OBJ_15 /* KleisliOperator.swift */,
			);
			path = Arrow;
			sourceTree = "<group>";
		};
		OBJ_96 /* Data */ = {
			isa = PBXGroup;
			children = (
				OBJ_97 /* ConstTest.swift */,
				OBJ_98 /* CoproductTest.swift */,
				OBJ_99 /* EitherTest.swift */,
				OBJ_100 /* EvalTest.swift */,
				OBJ_101 /* IdTest.swift */,
				OBJ_102 /* IorTest.swift */,
				OBJ_103 /* ListKWTest.swift */,
				OBJ_104 /* MaybeTest.swift */,
				OBJ_105 /* NonEmptyListTest.swift */,
				OBJ_106 /* TryTest.swift */,
				OBJ_107 /* TupleTest.swift */,
				OBJ_108 /* ValidatedTest.swift */,
			);
			path = Data;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		"Bow::Bow" /* Bow */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_377 /* Build configuration list for PBXNativeTarget "Bow" */;
			buildPhases = (
				OBJ_380 /* Sources */,
				OBJ_451 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = Bow;
			productName = Bow;
			productReference = "Bow::Bow::Product" /* Bow.framework */;
			productType = "com.apple.product-type.framework";
		};
		"Bow::BowTests" /* BowTests */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_242 /* Build configuration list for PBXNativeTarget "BowTests" */;
			buildPhases = (
				OBJ_245 /* Sources */,
				OBJ_291 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_295 /* PBXTargetDependency */,
				OBJ_297 /* PBXTargetDependency */,
				OBJ_299 /* PBXTargetDependency */,
			);
			name = BowTests;
			productName = BowTests;
			productReference = "Bow::BowTests::Product" /* BowTests.xctest */;
			productType = "com.apple.product-type.bundle.unit-test";
		};
		"Bow::SwiftPMPackageDescription" /* BowPackageDescription */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_224 /* Build configuration list for PBXNativeTarget "BowPackageDescription" */;
			buildPhases = (
				OBJ_227 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = BowPackageDescription;
			productName = BowPackageDescription;
			productType = "com.apple.product-type.framework";
		};
		"Nimble::Nimble" /* Nimble */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_301 /* Build configuration list for PBXNativeTarget "Nimble" */;
			buildPhases = (
				OBJ_304 /* Sources */,
				OBJ_355 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = Nimble;
			productName = Nimble;
			productReference = "Nimble::Nimble::Product" /* Nimble.framework */;
			productType = "com.apple.product-type.framework";
		};
		"Nimble::SwiftPMPackageDescription" /* NimblePackageDescription */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_230 /* Build configuration list for PBXNativeTarget "NimblePackageDescription" */;
			buildPhases = (
				OBJ_233 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = NimblePackageDescription;
			productName = NimblePackageDescription;
			productType = "com.apple.product-type.framework";
		};
		"SwiftCheck::SwiftCheck" /* SwiftCheck */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_356 /* Build configuration list for PBXNativeTarget "SwiftCheck" */;
			buildPhases = (
				OBJ_359 /* Sources */,
				OBJ_376 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = SwiftCheck;
			productName = SwiftCheck;
			productReference = "SwiftCheck::SwiftCheck::Product" /* SwiftCheck.framework */;
			productType = "com.apple.product-type.framework";
		};
		"SwiftCheck::SwiftPMPackageDescription" /* SwiftCheckPackageDescription */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_236 /* Build configuration list for PBXNativeTarget "SwiftCheckPackageDescription" */;
			buildPhases = (
				OBJ_239 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = SwiftCheckPackageDescription;
			productName = SwiftCheckPackageDescription;
			productType = "com.apple.product-type.framework";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		OBJ_1 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastUpgradeCheck = 9999;
			};
			buildConfigurationList = OBJ_2 /* Build configuration list for PBXProject "Bow" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = English;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
			);
			mainGroup = OBJ_5 /*  */;
			productRefGroup = OBJ_218 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				"Bow::SwiftPMPackageDescription" /* BowPackageDescription */,
				"Nimble::SwiftPMPackageDescription" /* NimblePackageDescription */,
				"SwiftCheck::SwiftPMPackageDescription" /* SwiftCheckPackageDescription */,
				"Bow::BowTests" /* BowTests */,
				"Nimble::Nimble" /* Nimble */,
				"SwiftCheck::SwiftCheck" /* SwiftCheck */,
				"Bow::Bow" /* Bow */,
				"Bow::BowPackageTests::ProductTarget" /* BowPackageTests */,
			);
		};
/* End PBXProject section */

/* Begin PBXSourcesBuildPhase section */
		OBJ_227 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_228 /* Package.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_233 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_234 /* Package.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_239 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_240 /* Package.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_245 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_246 /* Function0Test.swift in Sources */,
				OBJ_247 /* Function1Test.swift in Sources */,
				OBJ_248 /* KleisliOperatorTest.swift in Sources */,
				OBJ_249 /* KleisliTest.swift in Sources */,
				OBJ_250 /* BooleanFunctionsTest.swift in Sources */,
				OBJ_251 /* CurryTest.swift in Sources */,
				OBJ_252 /* ConstTest.swift in Sources */,
				OBJ_253 /* CoproductTest.swift in Sources */,
				OBJ_254 /* EitherTest.swift in Sources */,
				OBJ_255 /* EvalTest.swift in Sources */,
				OBJ_256 /* IdTest.swift in Sources */,
				OBJ_257 /* IorTest.swift in Sources */,
				OBJ_258 /* ListKWTest.swift in Sources */,
				OBJ_259 /* MaybeTest.swift in Sources */,
				OBJ_260 /* NonEmptyListTest.swift in Sources */,
				OBJ_261 /* TryTest.swift in Sources */,
				OBJ_262 /* TupleTest.swift in Sources */,
				OBJ_263 /* ValidatedTest.swift in Sources */,
				OBJ_264 /* AsyncContextLaws.swift in Sources */,
				OBJ_265 /* IOTest.swift in Sources */,
				OBJ_266 /* FreeTest.swift in Sources */,
				OBJ_267 /* NumberInstancesTest.swift in Sources */,
				OBJ_268 /* StringInstancesTest.swift in Sources */,
				OBJ_269 /* PartialApplicationTest.swift in Sources */,
				OBJ_270 /* PredefTest.swift in Sources */,
				OBJ_271 /* EitherTTest.swift in Sources */,
				OBJ_272 /* MaybeTTest.swift in Sources */,
				OBJ_273 /* StateTTest.swift in Sources */,
				OBJ_274 /* WriterTTest.swift in Sources */,
				OBJ_275 /* ApplicativeErrorLaws.swift in Sources */,
				OBJ_276 /* ApplicativeLaws.swift in Sources */,
				OBJ_277 /* ComonadLaws.swift in Sources */,
				OBJ_278 /* EqLaws.swift in Sources */,
				OBJ_279 /* FunctorFilterLaws.swift in Sources */,
				OBJ_280 /* FunctorLaws.swift in Sources */,
				OBJ_281 /* MonadErrorLaws.swift in Sources */,
				OBJ_282 /* MonadFilterLaws.swift in Sources */,
				OBJ_283 /* MonadLaws.swift in Sources */,
				OBJ_284 /* MonadStateLaws.swift in Sources */,
				OBJ_285 /* MonadWriterLaws.swift in Sources */,
				OBJ_286 /* MonoidKLaws.swift in Sources */,
				OBJ_287 /* MonoidLaws.swift in Sources */,
				OBJ_288 /* OrderLaws.swift in Sources */,
				OBJ_289 /* SemigroupKLaws.swift in Sources */,
				OBJ_290 /* SemigroupLaws.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_304 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_305 /* AdapterProtocols.swift in Sources */,
				OBJ_306 /* AssertionDispatcher.swift in Sources */,
				OBJ_307 /* AssertionRecorder.swift in Sources */,
				OBJ_308 /* NMBExpectation.swift in Sources */,
				OBJ_309 /* NMBObjCMatcher.swift in Sources */,
				OBJ_310 /* NimbleEnvironment.swift in Sources */,
				OBJ_311 /* NimbleXCTestHandler.swift in Sources */,
				OBJ_312 /* ExceptionCapture.swift in Sources */,
				OBJ_313 /* DSL+Wait.swift in Sources */,
				OBJ_314 /* DSL.swift in Sources */,
				OBJ_315 /* Expectation.swift in Sources */,
				OBJ_316 /* ExpectationMessage.swift in Sources */,
				OBJ_317 /* Expression.swift in Sources */,
				OBJ_318 /* FailureMessage.swift in Sources */,
				OBJ_319 /* AllPass.swift in Sources */,
				OBJ_320 /* AsyncMatcherWrapper.swift in Sources */,
				OBJ_321 /* BeAKindOf.swift in Sources */,
				OBJ_322 /* BeAnInstanceOf.swift in Sources */,
				OBJ_323 /* BeCloseTo.swift in Sources */,
				OBJ_324 /* BeEmpty.swift in Sources */,
				OBJ_325 /* BeGreaterThan.swift in Sources */,
				OBJ_326 /* BeGreaterThanOrEqualTo.swift in Sources */,
				OBJ_327 /* BeIdenticalTo.swift in Sources */,
				OBJ_328 /* BeLessThan.swift in Sources */,
				OBJ_329 /* BeLessThanOrEqual.swift in Sources */,
				OBJ_330 /* BeLogical.swift in Sources */,
				OBJ_331 /* BeNil.swift in Sources */,
				OBJ_332 /* BeVoid.swift in Sources */,
				OBJ_333 /* BeginWith.swift in Sources */,
				OBJ_334 /* Contain.swift in Sources */,
				OBJ_335 /* ContainElementSatisfying.swift in Sources */,
				OBJ_336 /* EndWith.swift in Sources */,
				OBJ_337 /* Equal.swift in Sources */,
				OBJ_338 /* HaveCount.swift in Sources */,
				OBJ_339 /* Match.swift in Sources */,
				OBJ_340 /* MatchError.swift in Sources */,
				OBJ_341 /* MatcherFunc.swift in Sources */,
				OBJ_342 /* MatcherProtocols.swift in Sources */,
				OBJ_343 /* PostNotification.swift in Sources */,
				OBJ_344 /* Predicate.swift in Sources */,
				OBJ_345 /* RaisesException.swift in Sources */,
				OBJ_346 /* SatisfyAnyOf.swift in Sources */,
				OBJ_347 /* ThrowAssertion.swift in Sources */,
				OBJ_348 /* ThrowError.swift in Sources */,
				OBJ_349 /* ToSucceed.swift in Sources */,
				OBJ_350 /* Async.swift in Sources */,
				OBJ_351 /* Errors.swift in Sources */,
				OBJ_352 /* Functional.swift in Sources */,
				OBJ_353 /* SourceLocation.swift in Sources */,
				OBJ_354 /* Stringers.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_359 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_360 /* Arbitrary.swift in Sources */,
				OBJ_361 /* Cartesian.swift in Sources */,
				OBJ_362 /* Check.swift in Sources */,
				OBJ_363 /* CoArbitrary.swift in Sources */,
				OBJ_364 /* Compose.swift in Sources */,
				OBJ_365 /* Gen.swift in Sources */,
				OBJ_366 /* Lattice.swift in Sources */,
				OBJ_367 /* Modifiers.swift in Sources */,
				OBJ_368 /* Property.swift in Sources */,
				OBJ_369 /* Random.swift in Sources */,
				OBJ_370 /* Rose.swift in Sources */,
				OBJ_371 /* State.swift in Sources */,
				OBJ_372 /* Test.swift in Sources */,
				OBJ_373 /* Testable.swift in Sources */,
				OBJ_374 /* Witness.swift in Sources */,
				OBJ_375 /* WitnessedArbitrary.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_380 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_381 /* Cokleisli.swift in Sources */,
				OBJ_382 /* Function0.swift in Sources */,
				OBJ_383 /* Function1.swift in Sources */,
				OBJ_384 /* FunctionK.swift in Sources */,
				OBJ_385 /* Kleisli.swift in Sources */,
				OBJ_386 /* KleisliOperator.swift in Sources */,
				OBJ_387 /* BooleanFunctions.swift in Sources */,
				OBJ_388 /* Curry.swift in Sources */,
				OBJ_389 /* Const.swift in Sources */,
				OBJ_390 /* Coproduct.swift in Sources */,
				OBJ_391 /* Coreader.swift in Sources */,
				OBJ_392 /* Either.swift in Sources */,
				OBJ_393 /* Eval.swift in Sources */,
				OBJ_394 /* FlatmapOperator.swift in Sources */,
				OBJ_395 /* Id.swift in Sources */,
				OBJ_396 /* Ior.swift in Sources */,
				OBJ_397 /* ListKW.swift in Sources */,
				OBJ_398 /* MapKW.swift in Sources */,
				OBJ_399 /* Maybe.swift in Sources */,
				OBJ_400 /* NonEmptyList.swift in Sources */,
				OBJ_401 /* Reader.swift in Sources */,
				OBJ_402 /* State.swift in Sources */,
				OBJ_403 /* Try.swift in Sources */,
				OBJ_404 /* Tuple.swift in Sources */,
				OBJ_405 /* Validated.swift in Sources */,
				OBJ_406 /* AsyncContext.swift in Sources */,
				OBJ_407 /* IO.swift in Sources */,
				OBJ_408 /* Cofree.swift in Sources */,
				OBJ_409 /* Coyoneda.swift in Sources */,
				OBJ_410 /* Free.swift in Sources */,
				OBJ_411 /* Yoneda.swift in Sources */,
				OBJ_412 /* HigherKinds.swift in Sources */,
				OBJ_413 /* NumberInstances.swift in Sources */,
				OBJ_414 /* StringInstances.swift in Sources */,
				OBJ_415 /* PartialApplication.swift in Sources */,
				OBJ_416 /* Predef.swift in Sources */,
				OBJ_417 /* EitherT.swift in Sources */,
				OBJ_418 /* MaybeT.swift in Sources */,
				OBJ_419 /* StateT.swift in Sources */,
				OBJ_420 /* WriterT.swift in Sources */,
				OBJ_421 /* Typeclass.swift in Sources */,
				OBJ_422 /* Alternative.swift in Sources */,
				OBJ_423 /* Applicative.swift in Sources */,
				OBJ_424 /* ApplicativeError.swift in Sources */,
				OBJ_425 /* Bifoldable.swift in Sources */,
				OBJ_426 /* Bimonad.swift in Sources */,
				OBJ_427 /* Comonad.swift in Sources */,
				OBJ_428 /* Composed.swift in Sources */,
				OBJ_429 /* ComposedFoldable.swift in Sources */,
				OBJ_430 /* Eq.swift in Sources */,
				OBJ_431 /* Foldable.swift in Sources */,
				OBJ_432 /* Functor.swift in Sources */,
				OBJ_433 /* FunctorFilter.swift in Sources */,
				OBJ_434 /* Inject.swift in Sources */,
				OBJ_435 /* Monad.swift in Sources */,
				OBJ_436 /* MonadCombine.swift in Sources */,
				OBJ_437 /* MonadError.swift in Sources */,
				OBJ_438 /* MonadFilter.swift in Sources */,
				OBJ_439 /* MonadReader.swift in Sources */,
				OBJ_440 /* MonadState.swift in Sources */,
				OBJ_441 /* MonadWriter.swift in Sources */,
				OBJ_442 /* Monoid.swift in Sources */,
				OBJ_443 /* MonoidK.swift in Sources */,
				OBJ_444 /* NonEmptyReducible.swift in Sources */,
				OBJ_445 /* Order.swift in Sources */,
				OBJ_446 /* Reducible.swift in Sources */,
				OBJ_447 /* Semigroup.swift in Sources */,
				OBJ_448 /* SemigroupK.swift in Sources */,
				OBJ_449 /* Traverse.swift in Sources */,
				OBJ_450 /* TraverseFilter.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		OBJ_295 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Nimble::Nimble" /* Nimble */;
			targetProxy = D653FC432067C58D00535EF6 /* PBXContainerItemProxy */;
		};
		OBJ_297 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "SwiftCheck::SwiftCheck" /* SwiftCheck */;
			targetProxy = D653FC442067C58D00535EF6 /* PBXContainerItemProxy */;
		};
		OBJ_299 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Bow::Bow" /* Bow */;
			targetProxy = D653FC452067C58D00535EF6 /* PBXContainerItemProxy */;
		};
		OBJ_456 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Bow::BowTests" /* BowTests */;
			targetProxy = D653FC462067C58E00535EF6 /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		OBJ_225 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 4 -I /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/pm/4 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk";
				SWIFT_VERSION = 4.0;
			};
			name = Debug;
		};
		OBJ_226 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 4 -I /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/pm/4 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk";
				SWIFT_VERSION = 4.0;
			};
			name = Release;
		};
		OBJ_231 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 4 -I /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/pm/4 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk";
				SWIFT_VERSION = 4.0;
			};
			name = Debug;
		};
		OBJ_232 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 4 -I /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/pm/4 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk";
				SWIFT_VERSION = 4.0;
			};
			name = Release;
		};
		OBJ_237 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 4 -I /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/pm/4 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk";
				SWIFT_VERSION = 4.0;
			};
			name = Debug;
		};
		OBJ_238 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 4 -I /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/pm/4 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk";
				SWIFT_VERSION = 4.0;
			};
			name = Release;
		};
		OBJ_243 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EMBEDDED_CONTENT_CONTAINS_SWIFT = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = Bow.xcodeproj/BowTests_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "@loader_path/../Frameworks @loader_path/Frameworks";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				SWIFT_VERSION = 4.0;
				TARGET_NAME = BowTests;
			};
			name = Debug;
		};
		OBJ_244 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EMBEDDED_CONTENT_CONTAINS_SWIFT = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = Bow.xcodeproj/BowTests_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "@loader_path/../Frameworks @loader_path/Frameworks";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				SWIFT_VERSION = 4.0;
				TARGET_NAME = BowTests;
			};
			name = Release;
		};
		OBJ_3 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_OBJC_ARC = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				ENABLE_NS_ASSERTIONS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				ONLY_ACTIVE_ARCH = YES;
				OTHER_SWIFT_FLAGS = "-DXcode";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				SUPPORTED_PLATFORMS = "macosx iphoneos iphonesimulator appletvos appletvsimulator watchos watchsimulator";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = SWIFT_PACKAGE;
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				USE_HEADERMAP = NO;
			};
			name = Debug;
		};
		OBJ_302 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = Bow.xcodeproj/Nimble_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = Nimble;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = Nimble;
			};
			name = Debug;
		};
		OBJ_303 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = Bow.xcodeproj/Nimble_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = Nimble;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = Nimble;
			};
			name = Release;
		};
		OBJ_357 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = Bow.xcodeproj/SwiftCheck_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = SwiftCheck;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = SwiftCheck;
			};
			name = Debug;
		};
		OBJ_358 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = Bow.xcodeproj/SwiftCheck_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = SwiftCheck;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = SwiftCheck;
			};
			name = Release;
		};
		OBJ_378 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = Bow.xcodeproj/Bow_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = Bow;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = Bow;
			};
			name = Debug;
		};
		OBJ_379 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = Bow.xcodeproj/Bow_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = Bow;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = Bow;
			};
			name = Release;
		};
		OBJ_4 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_OBJC_ARC = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = YES;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				GCC_OPTIMIZATION_LEVEL = s;
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				OTHER_SWIFT_FLAGS = "-DXcode";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				SUPPORTED_PLATFORMS = "macosx iphoneos iphonesimulator appletvos appletvsimulator watchos watchsimulator";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = SWIFT_PACKAGE;
				SWIFT_OPTIMIZATION_LEVEL = "-Owholemodule";
				USE_HEADERMAP = NO;
			};
			name = Release;
		};
		OBJ_454 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
			};
			name = Debug;
		};
		OBJ_455 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		OBJ_2 /* Build configuration list for PBXProject "Bow" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_3 /* Debug */,
				OBJ_4 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		OBJ_224 /* Build configuration list for PBXNativeTarget "BowPackageDescription" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_225 /* Debug */,
				OBJ_226 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		OBJ_230 /* Build configuration list for PBXNativeTarget "NimblePackageDescription" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_231 /* Debug */,
				OBJ_232 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		OBJ_236 /* Build configuration list for PBXNativeTarget "SwiftCheckPackageDescription" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_237 /* Debug */,
				OBJ_238 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		OBJ_242 /* Build configuration list for PBXNativeTarget "BowTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_243 /* Debug */,
				OBJ_244 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		OBJ_301 /* Build configuration list for PBXNativeTarget "Nimble" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_302 /* Debug */,
				OBJ_303 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		OBJ_356 /* Build configuration list for PBXNativeTarget "SwiftCheck" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_357 /* Debug */,
				OBJ_358 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		OBJ_377 /* Build configuration list for PBXNativeTarget "Bow" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_378 /* Debug */,
				OBJ_379 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		OBJ_453 /* Build configuration list for PBXAggregateTarget "BowPackageTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_454 /* Debug */,
				OBJ_455 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
/* End XCConfigurationList section */
	};
	rootObject = OBJ_1 /* Project object */;
}
